plugins {
  id("maven-publish")
  id("java-library")
}

group = 'cool.heller'
//version = '1.0-SNAPSHOT'
version = '1.0.1'

dependencies {
  implementation 'cool.heller:gradle-bom:1.0.1'
}

tasks.withType(PublishToMavenRepository) {
    doFirst {
        println("Publishing ${publication.groupId}:${publication.artifactId}:${publication.version} to ${repository.url}")
    }
}

repositories {
  maven {
    name 'local-registry'
    url = uri("file://${projectDir}/local-repository")
  }
  mavenCentral()
}

publishing {
    publications {
        javaLibrary(MavenPublication) {
          from components.java
            pom.withXml {
                asNode().dependencyManagement.dependencies.dependency.each { dep ->
                  if(dep.artifactId.last().value().last() in ["spring-boot-dependencies", /*"slf4j-log4j12"*/]) {
                      assert dep.parent().remove(dep)
                  }
                }
            } // pom
         } // javaLibrary
    } // publications
    repositories {
      maven {
        name 'local-registry'
        url = uri("file://${buildDir}/local-repository")
      } // maven
      /*
      maven {
        name 'gitlab-registry'
        // Projektname:                        uli/my-test-project   <-- geht nicht (2024-12)
        // Projektname - urlencoded:           uli%2Fmy-test-project <-- geht nicht (2024-12)
        // Projekt-ID (aus der Settings-Page): 123 <-------------------- geht       (2024-12)
        url = uri("https://gitlab.heller.cool/api/v4/projects/123/packages/maven")
        credentials(HttpHeaderCredentials) {
                name = 'Job-Token'
                value = System.getenv("CI_JOB_TOKEN")
        }
        authentication {
                header(HttpHeaderAuthentication)
        }
      } // maven
      */
    } // repositories
}
